                     ====================================
					  Building IQmol From Source on OS X
                     ====================================

Libraries
~~~~~~~~~

Most of the work required in compiling IQmol is setting up the required
libraries.  The compilation of the code itself is relatively straightforward.

 o You will need XCode > 5.0 installed in order to install the Qt libraries.
   To get the command line tools installed you need to run:
     xcode-select --install 

 o Download the Qt libraries from http://www.qt.io
   The latest version tested is 5.8.  Ensure that the bin directory
   containing qmake is added to your PATH, the default location for this is
   /Applications/Qt5.8/5.8/clang_64/bin

 o Ensure gfortran is installed, installer packages can be found at
   https://gcc.gnu.org/wiki/GFortranBinaries#MacOS

 o Cmake will be required to compile some of the libraries, the installer can
   be obtained from http://www.cmake.org/download/


 o OpenSSL:
   - Download: https://www.openssl.org/source  (version 1.0.1p tested)
   - Compile:  The regular compilation does not compile x86 code, so we envoke
     Configure manually:

        ./Configure darwin64-x86_64-cc
        make

   - Static libraries appear in top directory and may need to be moved to the lib
     subdirectory for the libssh2 compilation.


 o LibSSH2:
   - Download: http://www.libssh2.org  (version 1.8.0 tested)
   - Compile (making sure the correct path for libssl is specified): 

        ./configure --with-openssl --with-libssl-prefix=/path/to/openssl-1.0.1p --with-libz
        make

   - Shared and static libraries located in src/.libs

   - with cmake:
cmake -DOPENSSL_ROOT_DIR=$DEV/openssl-1.1.1f/ -DOPENSSL_INCLUDE_DIR=$DEV/openssl-1.1.1f/include/ -DOPENSSL_CRYPTO_LIBRARY=$DEV/openssl-1.1.1f/libcrypto.a -DOPENSSL_SSL_LIBRARY=$DEV/Development/openssl-1.1.1f/libssl.a ../


 o Boost:
   - Download: http://sourceforge.net/projects/boost/files/boost/1.56.0/
     Later versions of boost seem to have removed the load_collection function which
     is part of the serialization routines.
   - Compile: needs the -stdlib=libstdc++ setting to be compatible with Qt.
     Further details at: http://stackoverflow.com/questions/20108407/

        ./bootstrap.sh --prefix= toolset=clang
        ./b2 toolset=clang --without-mpi cxxflags="-arch x86_64 -fvisibility=hidden \
             -fvisibility-inlines-hidden -stdlib=libstdc++ -ftemplate-depth=512" \
             linkflags="-stdlib=libstdc++" stage

   - Static libraries are in stage/lib.  If they do not appear you may need to
     add "link=static runtime-link=static" to the b2 arguments


 o OpenBabel:
   - Download: http://openbabel.org/wiki/Get_Open_Babel (2.4.1)
     Use the installer which puts things in the following locations:
     Headers: /usr/local/include/openbabel-2.0
     PlugIns: /usr/local/lib/openbable/2.4.1
     Libs:    /usr/local/lib

   - Alternatively, the source can be downloaded and compiled with (in the build directory):

        cmake -DBUILD_SHARED=OFF -DWITH_STATIC_INCHI=ON -DWITH_STATIC_LIBXML=ON ..
        make

	 The static libopenbabel.a will be in the build/src directory. This 
     library archive contains all plugins.



Compilation
~~~~~~~~~~~

 o Compile the SymMol object file in src/Main
      gfortran -c symmol.f90

 o Edit the common.pri file to reflect the locations of the various libraries
   required.  I keep all these in a common directory set in the $DEV environment
   variable.

 o Compile the remaining IQmol source
      qmake IQmol.pro
      make
